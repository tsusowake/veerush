// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: eav_attribute_option.sql

package generated

import (
	"context"
)

const createEavAttributeOption = `-- name: CreateEavAttributeOption :one
insert
into eav_attribute_options (eav_attribute_code,
                            value,
                            ordering,
                            is_visible)
values ($1,
        $2,
        $3,
        $4)
returning eav_attribute_code
`

type CreateEavAttributeOptionParams struct {
	EavAttributeCode string
	Value            string
	Ordering         uint16
	IsVisible        bool
}

func (q *Queries) CreateEavAttributeOption(ctx context.Context, arg CreateEavAttributeOptionParams) (string, error) {
	row := q.db.QueryRow(ctx, createEavAttributeOption,
		arg.EavAttributeCode,
		arg.Value,
		arg.Ordering,
		arg.IsVisible,
	)
	var eav_attribute_code string
	err := row.Scan(&eav_attribute_code)
	return eav_attribute_code, err
}

const listEavAttributeOptionByEavAttributeCode = `-- name: ListEavAttributeOptionByEavAttributeCode :many
select id, eav_attribute_code, value, ordering, is_visible, created_at
from eav_attribute_options
where eav_attribute_code = $1
order by ordering
`

func (q *Queries) ListEavAttributeOptionByEavAttributeCode(ctx context.Context, eavAttributeCode string) ([]EavAttributeOption, error) {
	rows, err := q.db.Query(ctx, listEavAttributeOptionByEavAttributeCode, eavAttributeCode)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []EavAttributeOption
	for rows.Next() {
		var i EavAttributeOption
		if err := rows.Scan(
			&i.ID,
			&i.EavAttributeCode,
			&i.Value,
			&i.Ordering,
			&i.IsVisible,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
